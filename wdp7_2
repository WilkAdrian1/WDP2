#include <iostream>
#include <vector>

using namespace std;

void wypisz(vector<int>tab)
{
    for (int i = 0; i < tab.size(); i++)
    {
        cout << tab[i] << " | ";
    }
}

int max(vector<int>tab)
{
    int wynik = 0;
    for (int i = 0; i < tab.size(); i++)
    {
        if (tab[i] > wynik)
        {
            wynik = tab[i];
        }
    }
    return wynik;
}

bool czyNalezy(vector<int>tab, int element)
{
    for (int i = 0; i < tab.size(); i++)
    {
        if (element == tab[i])
        {
            return true;
        }
    }
    return false;
}

bool czyZawiera(vector<int>tab, vector<int>tab2)
{
    for (int i = 0; i < tab2.size(); i++)
    {
        if (!czyNalezy(tab, tab2[i]))
        {
            return false;
        }
    }
    return true;
}

vector<int> unikalnosc(vector<int>tab)
{
    vector<int>wynik;
    for (int i = 0; i < tab.size(); i++)
    {
        if (czyNalezy(wynik, tab[i]))
        {
            wynik.push_back(tab[i]);
        }
    }
    return wynik;
}
int main()
{
    vector<int>tab = { 1,2,3,4,5 };
    vector<int>tab2 = { 1,2,3 };
    int element = 5;
    wypisz(tab);
    cout << endl;
    cout << max(tab) << endl;
    bool wynik = czyNalezy(tab, element);
    cout << wynik << endl;
    bool wynik2 = czyZawiera(tab, tab2);
    cout << wynik2 << endl;
    vector<int>wynik3 = unikalnosc(tab);
    cout << wynik3;
}

1.Należy wymyśleć przykład.
2.Sprawdzić czy przykład jest kompletny.
3.Sformalizowanie przykładu(ile, typy, nazywy) 
4.Nagłówek funkcji(nazwa, parametr, typ)
5.Ciało funkcji.
6.Nie wiesz co pisac? To wróć do przykładu.
